#!/bin/bash

build_infinite() {
  gridSize=$((((1 + $4) / 2) * $4)) # bad states >= ceil(n / 2) * n
  rm -rf tmp-normal
  java -jar ../RERL.jar -mode=infinite -episode=0 -hidden=40 -epoch=0 robots$4_$5.bip robots$4_$5-normal.cpp robots$4_$5.bad > /dev/null 
  g++ -o run-normal robots$4_$5-normal.cpp -std=c++11
  ./run-normal >> tmp-normal
  counts=`cat tmp-normal | awk -F ":-->" '{print $2 $3}' | awk '$1 >= '"$gridSize"' || $2 >= '"$gridSize"'' | wc -l`
  if test $counts -eq 0; then
    echo Good >> bench-normal
  else
    echo Bad >> bench-normal
  fi
}


for i in `seq 5 4 30`; do
   rm -rf bench-normal
   for j in `seq 1 1 1000`; do
      build_infinite 1 1 1 $i 2
   done
   echo "robots"$i"_2"
   echo "Good " $(cat bench-normal | grep Good | wc -l) "out of" $(cat bench-normal | wc -l)
done


